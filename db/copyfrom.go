// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateBotFollowers implements pgx.CopyFromSource.
type iteratorForCreateBotFollowers struct {
	rows                 []CreateBotFollowersParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateBotFollowers) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateBotFollowers) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].BotID,
		r.rows[0].UserID,
	}, nil
}

func (r iteratorForCreateBotFollowers) Err() error {
	return nil
}

func (q *Queries) CreateBotFollowers(ctx context.Context, arg []CreateBotFollowersParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"bot_followers"}, []string{"bot_id", "user_id"}, &iteratorForCreateBotFollowers{rows: arg})
}

// iteratorForCreateUsers implements pgx.CopyFromSource.
type iteratorForCreateUsers struct {
	rows                 []CreateUsersParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateUsers) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateUsers) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].UserID,
		r.rows[0].DisplayName,
		r.rows[0].PictureUrl,
		r.rows[0].StatusMessage,
		r.rows[0].Language,
	}, nil
}

func (r iteratorForCreateUsers) Err() error {
	return nil
}

func (q *Queries) CreateUsers(ctx context.Context, arg []CreateUsersParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"users"}, []string{"user_id", "display_name", "picture_url", "status_message", "language"}, &iteratorForCreateUsers{rows: arg})
}
